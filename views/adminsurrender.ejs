<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" href="../images/mp-ico.png" type="image/x-icon" />
  <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css" />
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <title>Admin Surrenders</title>
</head>
<style>
  @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600&display=swap");

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Poppins", sans-serif;
  }

  :root {
    --primary-color: #FF8E8E;
    --panel-color: #fff;
    --text-color: #000;
    --black-light-color: #707070;
    --border-color: #e6e5e5;
    --toggle-color: #ddd;
    --box1-color: #4da3ff;
    --box2-color: #ffe6ac;
    --box3-color: #e7d1fc;
    --title-icon-color: #fff;

    /* ====== Transition ====== */
    --tran-05: all 0.5s ease;
    --tran-03: all 0.3s ease;
    --tran-03: all 0.2s ease;
  }

  body {
    min-height: 100vh;
    background-color: #ffff;
  }

  body.dark {
    --primary-color: #3a3b3c;
    --panel-color: #242526;
    --text-color: #ccc;
    --black-light-color: #ccc;
    --border-color: #4d4c4c;
    --toggle-color: #fff;
    --box1-color: #3a3b3c;
    --box2-color: #3a3b3c;
    --box3-color: #3a3b3c;
    --title-icon-color: #ccc;
  }

  /* === Custom Scroll Bar CSS === */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  ::-webkit-scrollbar-thumb {
    background: var(--primary-color);
    border-radius: 12px;
    transition: all 0.3s ease;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: #0b3cc1;
  }

  body.dark::-webkit-scrollbar-thumb:hover,
  body.dark .activity-data::-webkit-scrollbar-thumb:hover {
    background: #3a3b3c;
  }

  nav {
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: 250px;
    padding: 10px 14px;
    background-color: var(--panel-color);
    border-right: 1px solid var(--border-color);
    transition: var(--tran-05);
  }

  nav.close {
    width: 73px;
  }

  nav .logo-name {
    display: flex;
    align-items: center;
  }

  nav .logo-image {
    display: flex;
    justify-content: center;
    min-width: 45px;
  }

  nav .logo-image img {
    width: 40px;
    object-fit: cover;
    border-radius: 50%;
  }

  nav .logo-name .logo_name {
    font-size: 22px;
    font-weight: 600;
    color: var(--text-color);
    margin-left: 14px;
    transition: var(--tran-05);
  }

  nav.close .logo_name {
    opacity: 0;
    pointer-events: none;
  }

  nav .menu-items {
    margin-top: 40px;
    height: calc(100% - 90px);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .menu-items li {
    list-style: none;
  }

  .menu-items li a {
    display: flex;
    align-items: center;
    height: 50px;
    text-decoration: none;
    position: relative;
  }

  .nav-links li a:hover:before {
    content: "";
    position: absolute;
    left: -7px;
    height: 5px;
    width: 5px;
    border-radius: 50%;
    background-color: var(--primary-color);
  }

  body.dark li a:hover:before {
    background-color: var(--text-color);
  }

  .menu-items li a i {
    font-size: 24px;
    min-width: 45px;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--black-light-color);
  }

  .menu-items li a .link-name {
    font-size: 18px;
    font-weight: 400;
    color: var(--black-light-color);
    transition: var(--tran-05);
  }

  nav.close li a .link-name {
    opacity: 0;
    pointer-events: none;
  }

  .nav-links li a:hover i,
  .nav-links li a:hover .link-name {
    color: var(--text-color);
    font-weight: bold;
  }

  .nav-links .active a {
    background-color: var(--primary-color);
    border-radius: 5px;
  }

  .nav-links .active a i,
  .nav-links .active a .link-name {
    color: var(--text-color);
  }

  .nav-links .active a:hover {
    background-color: #FF9999;
    color: var(--panel-color) !important;
  }

  body.dark .nav-links li a:hover i,
  body.dark .nav-links li a:hover .link-name {
    color: var(--text-color);
  }

  .menu-items .logout-mode {
    padding-top: 10px;
    border-top: 1px solid var(--border-color);
  }

  .menu-items .mode {
    display: flex;
    align-items: center;
    white-space: nowrap;
  }

  .menu-items .mode-toggle {
    position: absolute;
    right: 14px;
    height: 50px;
    min-width: 45px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
  }

  .mode-toggle .switch {
    position: relative;
    display: inline-block;
    height: 22px;
    width: 40px;
    border-radius: 25px;
    background-color: var(--toggle-color);
  }

  .switch:before {
    content: "";
    position: absolute;
    left: 5px;
    top: 50%;
    transform: translateY(-50%);
    height: 15px;
    width: 15px;
    background-color: var(--panel-color);
    border-radius: 50%;
    transition: var(--tran-03);
  }

  body.dark .switch:before {
    left: 20px;
  }

  .dashboard {
    position: relative;
    left: 250px;
    background-color: var(--panel-color);
    min-height: 100vh;
    width: calc(100% - 250px);
    padding: 10px 14px;
    transition: var(--tran-05);
  }

  nav.close~.dashboard {
    left: 73px;
    width: calc(100% - 73px);
  }



  .submitted-reports {
    margin-left: 10em;
  }

  @media screen and (max-width: 768px) {

    /*  responsive  */
    .submitted-reports {
      margin-left: 0px;
    }
  }

  .entry {
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 10px;
    padding: 20px;
    margin: 20px;
    width: 25em;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    display: inline-block;
    margin-right: 10px;
    vertical-align: top;
    position: relative;
    /* Relative positioning for button placement */


  }

  .entry:hover {
    transform: translateY(-5px);
  }




  img[alt="image"] {
    max-width: 100%;
    /* Adjust the maximum width as needed */
    max-height: 200px;
    /* Adjust the maximum height as needed */
    /* Add any other styles you want */
  }

  .dashboard .top {
    position: fixed;
    top: 0;
    left: 250px;
    display: flex;
    width: calc(100% - 250px);
    justify-content: space-between;
    align-items: center;
    padding: 10px 14px;
    background-color: var(--panel-color);
    transition: var(--tran-05);
    z-index: 10;
  }

  nav.close~.dashboard .top {
    left: 73px;
    width: calc(100% - 73px);
  }

  .dashboard .top .sidebar-toggle {
    font-size: 26px;
    color: var(--text-color);
    cursor: pointer;
  }

  .dashboard .top .search-box {
    position: relative;
    height: 45px;
    max-width: 600px;
    width: 100%;
    margin: 0 30px;
  }

  .top .search-box input {
    position: absolute;
    border: 1px solid var(--border-color);
    background-color: var(--panel-color);
    padding: 0 25px 0 50px;
    border-radius: 5px;
    height: 100%;
    width: 100%;
    color: var(--text-color);
    font-size: 15px;
    font-weight: 400;
    outline: none;
  }

  .top .search-box i {
    position: absolute;
    left: 15px;
    font-size: 22px;
    z-index: 10;
    top: 50%;
    transform: translateY(-50%);
    color: var(--black-light-color);
  }

  .top img {
    width: 40px;
    border-radius: 50%;
  }

  .dashboard .dash-content {
    padding-top: 50px;
  }

  .dash-content .title {
    display: flex;
    align-items: center;
    margin: 60px 0 30px 0;
  }

  .dash-content .title i {
    position: relative;
    height: 35px;
    width: 35px;
    background-color: var(--primary-color);
    border-radius: 6px;
    color: var(--title-icon-color);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
  }

  .dash-content .title .text {
    font-size: 24px;
    font-weight: 500;
    color: var(--text-color);
    margin-left: 10px;
  }

  .dash-content .boxes {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
  }

  .dash-content .boxes .box {
    display: flex;
    flex-direction: column;
    align-items: center;
    border-radius: 12px;
    width: calc(100% / 3 - 15px);
    padding: 15px 20px;
    background-color: var(--box1-color);
    transition: var(--tran-05);
  }

  .boxes .box i {
    font-size: 35px;
    color: var(--text-color);
  }

  .boxes .box .text {
    white-space: nowrap;
    font-size: 18px;
    font-weight: 500;
    color: var(--text-color);
  }

  .boxes .box .number {
    font-size: 40px;
    font-weight: 500;
    color: var(--text-color);
  }

  .boxes .box.box2 {
    background-color: var(--box2-color);
  }

  .boxes .box.box3 {
    background-color: var(--box3-color);
  }

  .dash-content .activity .activity-data {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
  }

  .activity .activity-data {
    display: flex;
  }

  .activity-data .data {
    display: flex;
    flex-direction: column;
    margin: 0 15px;
  }

  .activity-data .data-title {
    font-size: 20px;
    font-weight: 500;
    color: var(--text-color);
  }

  .activity-data .data .data-list {
    font-size: 18px;
    font-weight: 400;
    margin-top: 20px;
    white-space: nowrap;
    color: var(--text-color);
  }

  .con1 {
    margin-top: 100px;
  }

  @media (max-width: 1000px) {
    nav {
      width: 73px;
    }

    nav.close {
      width: 250px;
    }

    nav .logo_name {
      opacity: 0;
      pointer-events: none;
    }

    nav.close .logo_name {
      opacity: 1;
      pointer-events: auto;
    }

    nav li a .link-name {
      opacity: 0;
      pointer-events: none;
    }

    nav.close li a .link-name {
      opacity: 1;
      pointer-events: auto;
    }

    nav~.dashboard {
      left: 73px;
      width: calc(100% - 73px);
    }

    nav.close~.dashboard {
      left: 250px;
      width: calc(100% - 250px);
    }

    nav~.dashboard .top {
      left: 73px;
      width: calc(100% - 73px);
    }

    nav.close~.dashboard .top {
      left: 250px;
      width: calc(100% - 250px);
    }

    .activity .activity-data {
      overflow-x: scroll;
    }
  }

  @media (max-width: 780px) {
    .dash-content .boxes .box {
      width: calc(100% / 2 - 15px);
      margin-top: 15px;
    }
  }

  @media (max-width: 560px) {
    .dash-content .boxes .box {
      width: 100%;
    }
  }

  @media (max-width: 400px) {
    nav {
      width: 0px;
    }

    nav.close {
      width: 73px;
    }

    nav .logo_name {
      opacity: 0;
      pointer-events: none;
    }

    nav.close .logo_name {
      opacity: 0;
      pointer-events: none;
    }

    nav li a .link-name {
      opacity: 0;
      pointer-events: none;
    }

    nav.close li a .link-name {
      opacity: 0;
      pointer-events: none;
    }

    nav~.dashboard {
      left: 0;
      width: 100%;
    }

    nav.close~.dashboard {
      left: 73px;
      width: calc(100% - 73px);
    }

    nav~.dashboard .top {
      left: 0;
      width: 100%;
    }

    nav.close~.dashboard .top {
      left: 0;
      width: 100%;
    }
  }

  .buttons {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
  }

  .accept-button,
  .reject-button,
  .archive-button{
    background-color: #4caf50;
    border: none;
    color: white;
    padding: 10px 20px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin-right: 10px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .accept-button:hover,
  .reject-button:hover {
    background-color: #45a049;
    /* Darker green on hover */
  }

  .reject-button {
    background-color: #f44336;
    /* Red for Reject */
  }

  .reject-button:hover {
    background-color: #d32f2f;
    /* Darker red on hover */
  }

  .archive-button {
    background-color: #3498db;
    /* Change to your preferred background color */
  }

  .archive-button:hover {
    background-color: #2980b9;
    /* Darker color on hover */
  }
  

  .image-link {
    text-decoration: none;
    /* Remove the underline for the link */
  }

  /* Style for the larger image (initially hidden) */
  #larger-image {
    margin-top: 5em;
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    /* Semi-transparent black background */
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #larger-image img {
    max-width: 90%;
    max-height: 90%;
  }

  /* Styles for submenu */
  ul.nav-links li {
    position: relative;
    /* Set parent li to relative */
  }

  ul.nav-links li ul.submenu {
    display: none;
    position: absolute;
    background-color: #fff;
    /* Change background color as needed */
    padding: 10px;
    top: 100%;
    /* Position below the parent */
    left: 0;
    /* Align with parent */
    z-index: 999;
    /* Higher z-index to bring it in front */
    width: 300px;
    /* Set the width of the submenu */
    border: 1px solid #ccc;
    /* Add border to the submenu */

  }

  /* Set width for submenu items */
  ul.nav-links li ul.submenu li {
    width: 100%;
    /* Set the width of submenu items */
    border-bottom: 1px solid #ddd;
    /* Add bottom border to submenu items */
  }

  /* Styles for submenu links */
  ul.nav-links li ul.submenu li a {
    display: block;
    text-decoration: none;
    color: #333;
    /* Link color */
    padding: 8px 16px;
    font-family: 'Poppins', sans-serif;
  }

  /* Additional styling as needed */

  /* Ensure the submenu is at the top level */
  ul.submenu {
    position: absolute;
    top: 0;
    left: 0;
  }
  .buttons-show {
  display: flex;
  justify-content: center; /* Horizontal centering */
  align-items: center; /* Vertical centering */
  /* Additional styling properties for the container if needed */
}
</style>

<body>
  <nav>
    <div class="logo-name">
      <div class="logo-image">
        <img src="../images/icon.jpg" alt="">
      </div>
      <span class="logo_name">Welcome, Admin!</span>
    </div>
    <div class="menu-items">
      <ul class="nav-links">
        <li><a href="/admin/admindashboard">
            <i class="uil uil-estate"></i>
            <span class="link-name">Dashboard</span>
          </a></li>
        <li><a href="/admin/list-users">
            <i class="uil uil-files-landscapes"></i>
            <span class="link-name">Manage Users</span>
          </a></li>

        <li><a href="/admin/list-pets">
            <i class="uil uil-files-landscapes"></i>
            <span class="link-name">Manage Pets</span>
          </a></li>
        <li><a href="/admin/adminadoptions">
            <i class="uil uil-envelope-check"></i>
            <span class="link-name">Pet requests </span>
          </a></li>
        <li><a href="/admin/adminrequests">
            <i class="uil uil-chart"></i>
            <span class="link-name">Adoptions</span>
          </a></li>
        <li><a href="/admin/adminreport">
            <i class="uil uil-phone-volume"></i>
            <span class="link-name">Reports</span>
          </a></li>
        <li><a href="/admin/admindonate">
            <i class="uil uil-heartbeat"></i>
            <span class="link-name">Donations</span>
          </a></li>
        <li><a href="/admin/adminsurrender">
            <i class="uil uil-frown"></i>
            <span class="link-name">Surrender</span>
          </a></li>
        <li class="archives">
          <a href="#" class="dropdown-toggle">
            <i class="uil uil-archive"></i>
            <span class="link-name">Archives</span>
          </a>
          <ul class="submenu">
            <li><a href="/admin/requestarchives/requestarchives">Pet Adoption</a></li>
            <li><a href="/admin/surrenderarchives/surrenderarchives">Surrender Applications</a></li>
            <li><a href="/admin/petrequestarchives/petrequestarchives">Pet Requests</a></li>
            <li><a href="/admin/reportarchives/reportarchives">Pet Reports</a></li>
            <li><a href="/admin/adoptedarchives/adoptedarchives">Adopted Pets</a></li>
            <!-- Add more archive links as needed -->
          </ul>
        </li>
      </ul>
      <ul class="logout-mode">
        <li>
          <a href="#" onclick="performLogout()">
            <i class="uil uil-signout"></i>
            <span class="link-name">Logout</span>
          </a>
        </li>
        <li>
          <a type="submit" onclick="location.href='/admin/signup'"></atype>
            <i class="uil uil-user-plus"></i>
            <span class="link-name">Create Another Admin</span>
          </a>
          <div class="mode-toggle">
            <span class="switch"></span>
          </div>
        </li>
      </ul>
    </div>
  </nav>
  <section class="dashboard" style="margin-top: 1em">

    <div class="top">
      <i class="uil uil-bars sidebar-toggle"></i>
      <div class="search-box">
        <i class="uil uil-search"></i>
        <input type="text" placeholder="Search here..." id="searchInput">
      </div>

    </div>

    <center>
      <h1 style="margin-top: 3em;">Surrendered pets</h1>
    </center>

    <div class="submitted-reports" style="margin-top: 2em;">
      <% surrenders.forEach(function(surrender) { %>
        <div class="entry <%= surrender.archived ? 'archived' : '' %>">
          <a href="/<%= surrender.petpic %>" class="image-link">
            <center><img src="/<%= surrender.petpic %>" alt="image" /></center>
          </a>
          <strong><label for="ownerName">Owner Name:</label></strong>
          <%= surrender.ownerName %> <br />
            <strong><label for="date">Date:</label></strong>
            <%= surrender.date.toLocaleDateString() %> <br />
              <div class="details">
                <p><strong>Email:</strong>
                  <%= surrender.email %>
                </p>
                <p><strong>Contact Number:</strong>
                  <%= surrender.contact %>
                </p>
                <p><strong>Full Address:</strong>
                  <%= surrender.fullAddress %>
                </p>
                <div class="additional-details" style="display: none;">
                  <p><strong>Pet Name: </strong>
                    <%= surrender.petName %>
                  </p>
                  <p><strong>Type: </strong>
                    <%= surrender.petType %>
                  </p>
                  <p><strong>Date of Birth:</strong>
                    <%= surrender.dateOfBirth.toLocaleDateString() %> %>
                  </p>
                  <p><strong>Breed:</strong>
                    <%= surrender.breed %>
                  </p>
                  <p><strong>Gender:</strong>
                    <%= surrender.sex %>
                  </p>
                  <p><strong>Spayed/neutered? :</strong>
                    <%= surrender.spayedNeutered %>
                  </p>
                  <p><strong>Vaccinated:</strong>
                    <%= surrender.vaccinated %>
                  </p>
                  <p><strong>Medical Concerns:</strong>
                    <%= surrender.medicalConcerns %>
                  </p>
                  <p><strong>Current Medical Issues:</strong>
                    <%= surrender.currentMedicalIssues %>
                  </p>
                  <p><strong>Aggressive:</strong>
                    <%= surrender.aggression %>
                  </p>
                  <p><strong>Ever Bit a Person or Animal:</strong>
                    <%= surrender.biting %>
                  </p>
                  <p><strong>Trained:</strong>
                    <%= surrender.leashCageTrained %>
                  </p>
                  <p><strong>Good with other pets:</strong>
                    <%= surrender.goodWithOtherPets %>
                  </p>
                  <p><strong>Good with childer:</strong>
                    <%= surrender.goodWithChildren %>
                  </p>
                  <p><strong>Kept:</strong>
                    <%= surrender.indoorOutdoor %>
                  </p>
                  <p><strong>Payment method: </strong>
                    <%= surrender.paymentMethod %>
                  </p>
                </div><br>
                <div class="buttons-show">
                 <button class="btn btn-info show-more-button">Show more</button>
                 <button class="btn btn-info show-less-button" style="display: none;">Show less</button>
                </div>
                <div class="buttons">
                  <button class="btn btn-success accept-button" data-id="<%= surrender.id %>"
                    data-userId="<%= surrender.userId %>" data-email="<%= surrender.email %>">Accept</button>
                  <button data-id="<%= surrender.id %>" class="btn btn-danger reject-button"
                    data-userId="<%= surrender.userId %>" data-email="<%= surrender.email %>">Reject</button>
                </div>
              </div>
            </div>
          <% }) %>
        </div>
        
        <script>
          // JavaScript for Show more/Show less functionality
          document.querySelectorAll('.entry').forEach(entry => {
            const showMoreBtn = entry.querySelector('.show-more-button');
            const showLessBtn = entry.querySelector('.show-less-button');
            const additionalDetails = entry.querySelector('.additional-details');
        
            showMoreBtn.addEventListener('click', () => {
              const detailsDiv = entry.querySelector('.details');
              additionalDetails.style.display = 'block';
              showMoreBtn.style.display = 'none';
              showLessBtn.style.display = 'inline-block';
              detailsDiv.appendChild(showLessBtn); // Moving the "Show less" button inside the details section
            });
        
            showLessBtn.addEventListener('click', () => {
              additionalDetails.style.display = 'none';
              showMoreBtn.style.display = 'inline-block';
              showLessBtn.style.display = 'none';
            });
          });
        </script>
  </section>


  <script>
    const body = document.querySelector("body"),
      modeToggle = body.querySelector(".mode-toggle");
    sidebar = body.querySelector("nav");
    sidebarToggle = body.querySelector(".sidebar-toggle");

    let getMode = localStorage.getItem("mode");
    if (getMode && getMode === "dark") {
      body.classList.toggle("dark");
    }

    let getStatus = localStorage.getItem("status");
    if (getStatus && getStatus === "close") {
      sidebar.classList.toggle("close");
    }

    modeToggle.addEventListener("click", () => {
      body.classList.toggle("dark");
      if (body.classList.contains("dark")) {
        localStorage.setItem("mode", "dark");
      } else {
        localStorage.setItem("mode", "light");
      }
    });

    sidebarToggle.addEventListener("click", () => {
      sidebar.classList.toggle("close");
      if (sidebar.classList.contains("close")) {
        localStorage.setItem("status", "close");
      } else {
        localStorage.setItem("status", "open");
      }
    })

    const currentUrl = window.location.pathname;
    const navLinks = document.querySelectorAll('.nav-links a');

    navLinks.forEach(link => {
      const linkHref = link.getAttribute('href');
      if (currentUrl === linkHref) {
        link.parentElement.classList.add('active');
      }
    });

    $(document).ready(function () {
      // When the image link is clicked
      $('.image-link').click(function (e) {
        e.preventDefault(); // Prevent the default behavior of the link

        // Get the image source from the clicked link
        var imageSrc = $(this).find('img').attr('src');

        // Create and display the larger image
        var largerImage = $('<div id="larger-image"><img src="' + imageSrc + '"></div>');
        $('body').append(largerImage);

        // When the larger image is clicked, hide it
        $('#larger-image').click(function () {
          $(this).remove();
        });
      });
    });





    // Inside the accept and reject button click handler
    document.querySelectorAll('.accept-button').forEach(button => {
      button.addEventListener('click', function () {
        const email = button.getAttribute('data-email');
        const id = button.getAttribute('data-id');
        const usersID = button.getAttribute('data-userId');
        const content = "Your surrender request is accepted!";
        const status = 'Accepted';

        fetch('/admin/surrenderarchives/notify', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ status, usersID, content }), // Send 'id' along with 'email'
        })
          .then(function (response) {
            if (response.status === 200) {
              // Remove the corresponding entry from the UI
              const entry = button.closest('.entry');
              entry.remove();
            } else {
              // Handle errors, if needed
            }
          })
          .catch(function (error) {
            console.error('Error archiving report request:', error);
          });

        fetch('/admin/send-email', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ email, status })
        })
          .then(response => response.json())
          .then(data => {
            // Log the response data to the console
            console.log(data);

            // Display an alert with the message "Email sent to the user"
            alert('Email sent to the user');
          })
          .catch(error => {
            console.error('Error:', error);
          });

        fetch('/admin/surrenderarchives/archive', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email, id, status }), // Send 'id' along with 'email'
        })
          .then(function (response) {
            if (response.status === 200) {
              // Remove the corresponding entry from the UI
              const entry = button.closest('.entry');
              entry.remove();
            } else {
              // Handle errors, if needed
            }
          })
          .catch(function (error) {
            console.error('Error archiving surrender request:', error);
          });
      });
    });

    const archiveButtons = document.querySelectorAll('.reject-button');
    archiveButtons.forEach(function (button) {
      button.addEventListener('click', function () {
        const email = button.getAttribute('data-email');
        const id = button.getAttribute('data-id');
        const usersID = button.getAttribute('data-userId');
        const content = "Your surrender request is rejected!";
        const status = 'Rejected';

        fetch('/admin/surrenderarchives/notify', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ status, usersID, content }), // Send 'id' along with 'email'
        })
          .then(function (response) {
            if (response.status === 200) {
              // Remove the corresponding entry from the UI
              const entry = button.closest('.entry');
              entry.remove();
            } else {
              // Handle errors, if needed
            }
          })
          .catch(function (error) {
            console.error('Error archiving report request:', error);
          });

        fetch('/admin/send-email', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ email, status })
        })
          .then(response => response.json())
          .then(data => {
            // Log the response data to the console
            console.log(data);

            // Display an alert with the message "Email sent to the user"
            alert('Email sent to the user');
          })
          .catch(error => {
            console.error('Error:', error);
          });

        fetch('/admin/surrenderarchives/archive', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email, id, status }), // Send 'id' along with 'email'
        })
          .then(function (response) {
            if (response.status === 200) {
              // Remove the corresponding entry from the UI
              const entry = button.closest('.entry');
              entry.remove();
            } else {
              // Handle errors, if needed
            }
          })
          .catch(function (error) {
            console.error('Error archiving surrender request:', error);
          });
      });
    });




    // const deleteButton = document.querySelectorAll('.reject-button');
    //     deleteButton.forEach(function (button) {
    //         button.addEventListener('click', function () {
    //             const email = button.getAttribute('data-email');
    //             const usersID = button.getAttribute('data-userId');
    //             const message = button.getAttribute('data-message');
    //             const content = "Your surrender request is rejected!";
    //             const status = 'Rejected';

    //             fetch('/admin/reportarchives/notify', {
    //                 method: 'POST',
    //                 headers: {
    //                     'Content-Type': 'application/json',
    //                 },
    //                 body: JSON.stringify({  status, usersID, content}), // Send 'id' along with 'email'
    //             })
    //                 .then(function (response) {
    //                     if (response.status === 200) {
    //                         // Remove the corresponding entry from the UI
    //                         const entry = button.closest('.entry');
    //                         entry.remove();
    //                     } else {
    //                         // Handle errors, if needed
    //                     }
    //                 })
    //                 .catch(function (error) {
    //                     console.error('Error archiving report request:', error);
    //                 });

    //             const id = button.getAttribute('data-report-id');
    //             fetch('/admin/reportarchives/archive', {
    //                 method: 'POST',
    //                 headers: {
    //                     'Content-Type': 'application/json',
    //                 },
    //                 body: JSON.stringify({ email, id, status }), // Send 'id' along with 'email'
    //             })
    //                 .then(function (response) {
    //                     if (response.status === 200) {
    //                         // Remove the corresponding entry from the UI
    //                         const entry = button.closest('.entry');
    //                         entry.remove();
    //                     } else {
    //                         // Handle errors, if needed
    //                     }
    //                 })
    //                 .catch(function (error) {
    //                     console.error('Error archiving surrender request:', error);
    //                 });
    //         });
    //     });






    document.addEventListener('DOMContentLoaded', function () {
      const searchInput = document.getElementById('searchInput');
      const entries = document.querySelectorAll('.entry');

      searchInput.addEventListener('input', function () {
        const searchTerm = searchInput.value.toLowerCase();

        entries.forEach(function (entry) {
          const ownerName = entry.querySelector('.details p:nth-child(8)').textContent.toLowerCase();
          const date = entry.querySelector('.details p:nth-child(1)').textContent.toLowerCase();
          const email = entry.querySelector('.details p:nth-child(2)').textContent.toLowerCase();
          const fullAddress = entry.querySelector('.details p:nth-child(3)').textContent.toLowerCase();
          const petName = entry.querySelector('.details p:nth-child(4)').textContent.toLowerCase();
          const type = entry.querySelector('.details p:nth-child(5)').textContent.toLowerCase();
          const dateOfBirth = entry.querySelector('.details p:nth-child(6)').textContent.toLowerCase();
          const breed = entry.querySelector('.details p:nth-child(7)').textContent.toLowerCase();
          const gender = entry.querySelector('.details p:nth-child(9)').textContent.toLowerCase();
          const paymentMethod = entry.querySelector('.details p:nth-child(10)').textContent.toLowerCase();

          const isMatch =
            ownerName.includes(searchTerm) ||
            date.includes(searchTerm) ||
            email.includes(searchTerm) ||
            fullAddress.includes(searchTerm) ||
            petName.includes(searchTerm) ||
            type.includes(searchTerm) ||
            dateOfBirth.includes(searchTerm) ||
            breed.includes(searchTerm) ||
            gender.includes(searchTerm) ||
            paymentMethod.includes(searchTerm);

          entry.style.display = isMatch ? 'inline-block' : 'none';
        });
      });
    });




  </script>



  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
    $(document).ready(function () {
      $('.archives .dropdown-toggle').click(function (e) {
        e.preventDefault();
        $('.archives .submenu').toggle();
      });

      // Close the submenu if clicking outside of it
      $(document).on('click', function (e) {
        if (!$(e.target).closest('.archives').length) {
          $('.archives .submenu').hide();
        }
      });
    });
  </script>

  <script>
    function performLogout() {
      // Show a loading state (optional)
      // For example, change the link text to 'Logging out...'
      const logoutLink = document.querySelector('.logout-mode a');
      logoutLink.innerHTML = '<i class="uil uil-spinner"></i> Logging out...';

      // Simulate a delay of 2 seconds before redirecting to the login page
      setTimeout(function () {
        window.location.href = '/admin/login';
      }, 2000); // Adjust the delay time (in milliseconds) as needed
    }
  </script>



</body>

</html>